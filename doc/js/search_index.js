var search_data = {"index":{"searchIndex":["nvector","testnvector","testutils","add()","inner_product()","inner_product_with()","log_banner()","log_result()","new()","outer_product()","scale_by()","setup()","subtract()","test_add()","test_inner_product_with()","test_outer_product()","test_scale()","test_subtract()","test_to_string()","to_string()","license","readme","rakefile","rake-d","project.properties","project.xml","st.gemspec"],"longSearchIndex":["nvector","testnvector","testutils","nvector#add()","nvector#inner_product()","nvector#inner_product_with()","testutils#log_banner()","testutils#log_result()","nvector::new()","nvector#outer_product()","nvector#scale_by()","testnvector#setup()","nvector#subtract()","testnvector#test_add()","testnvector#test_inner_product_with()","testnvector#test_outer_product()","testnvector#test_scale()","testnvector#test_subtract()","testnvector#test_to_string()","nvector#to_string()","","","","","","",""],"info":[["NVector","","NVector.html","","<p>\n\n<pre>Provides basic vector methods\n\n== Parameters\n\n+size+ : The number of elements in the vector&lt;br&gt;\n+initial_data+ ...</pre>\n"],["TestNVector","","TestNVector.html","",""],["TestUtils","","TestUtils.html","",""],["add","NVector","NVector.html#method-i-add","(a_vector)","<p>\n\n<pre>Add a given vector to this vector&lt;br&gt;\nNOTE: if the given vector is larger than this one some of it&#39;s ...</pre>\n"],["inner_product","NVector","NVector.html#method-i-inner_product","(a_vector, b_vector)","<p>\n\n<pre>Find the inner product of two NVectors\n\n== Parameters\n+a_vector+ : First NVector instance&lt;br&gt;\n+b_vector+ ...</pre>\n"],["inner_product_with","NVector","NVector.html#method-i-inner_product_with","(a_vector)","<p>\n\n<pre>Find the inner product of this vector with a given one\n\n== Parameters\n+a_vector+ : Another NVector instance ...</pre>\n"],["log_banner","TestUtils","TestUtils.html#method-i-log_banner","()",""],["log_result","TestUtils","TestUtils.html#method-i-log_result","(result, msg)",""],["new","NVector","NVector.html#method-c-new","(size, initial_data=nil)","<p>\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Constructor</span>\n</pre>\n"],["outer_product","NVector","NVector.html#method-i-outer_product","(a_vector, b_vector)","<p>\n\n<pre>Find the outer product of two NVectors\n\n== Parameters\n+a_vector+ : First NVector instance&lt;br&gt;\n+b_vector+ ...</pre>\n"],["scale_by","NVector","NVector.html#method-i-scale_by","(factor)","<p>\n\n<pre>Increase each element of the vector by a scaler value\n\n== Parameters\n+factor+ : scaler value to scale ...</pre>\n"],["setup","TestNVector","TestNVector.html#method-i-setup","()",""],["subtract","NVector","NVector.html#method-i-subtract","(a_vector)","<p>\n\n<pre>Subtract a given vector to this vector\n\n== Parameters\n+a_vector+ : Another NVector instance to subtract ...</pre>\n"],["test_add","TestNVector","TestNVector.html#method-i-test_add","()","<p>\n"],["test_inner_product_with","TestNVector","TestNVector.html#method-i-test_inner_product_with","()","<p>\n"],["test_outer_product","TestNVector","TestNVector.html#method-i-test_outer_product","()","<p>\n"],["test_scale","TestNVector","TestNVector.html#method-i-test_scale","()","<p>\n"],["test_subtract","TestNVector","TestNVector.html#method-i-test_subtract","()","<p>\n"],["test_to_string","TestNVector","TestNVector.html#method-i-test_to_string","()","<p>\n"],["to_string","NVector","NVector.html#method-i-to_string","()","<p>\n\n<pre>Returns vector as printable string\n\n== Parameters\nnone\n\n== Returns\nVector as a string</pre>\n<p>\n"],["LICENSE","","LICENSE.html","","<p>network-math\n<p>Copyright © Steven M. Lyles &amp; 4I Designs steven.lyles@gmail.com\n<p>GPL-3.0\n"],["README","","README.html","","<p>TBD: Add documentation…\n"],["Rakefile","","Rakefile.html","","<p>task :default =&gt; [:test, :build_gem, :gen_doc]\n<p>#===============================================================================\n…\n"],["rake-d","","nbproject/private/rake-d_txt.html","","<p>build_gem=Build Gem default= gen_doc=Generate HTML documentation with rdoc\ntest=Run Unit Test\n"],["project.properties","","nbproject/project_properties.html","","<p>main.file=main.rb platform.active=Ruby_0 source.encoding=UTF-8\nspec.src.dir=spec src.dir=lib test.src.dir …\n"],["project.xml","","nbproject/project_xml.html","","<p>&lt;project xmlns=“www.netbeans.org/ns/project/1”&gt;\n\n<pre>&lt;type&gt;org.netbeans.modules.ruby.rubyproject&lt;/type&gt; ...</pre>\n"],["st.gemspec","","st_gemspec.html","","<p>spec = Gem::Specification.new do |s|\n\n<pre>s.name = &#39;network-math&#39;\ns.version = &#39;0.0.1&#39;\ns.has_rdoc = true\ns.extra_rdoc_files ...</pre>\n"]]}}